{"version":3,"sources":["assets/logo.png","Shared/Header.js","Shared/Footer.js","Pages/Home.js","Shared/Loader.js","Pages/Receipes.js","Pages/Reach.js","Pages/About.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","logo","alt","width","exact","activeClassName","to","Footer","bgStyle","color","backgroundImage","backgroundSize","Home","style","Loader","Receipes","useState","loading","setLoading","receipes","setReceipes","search","setSearch","query","setQuery","useEffect","axios","get","withCredentials","then","response","data","hits","catch","error","document","body","backgroundColor","onSubmit","e","preventDefault","type","value","onChange","target","map","receipe","index","key","recipe","image","label","ingredientLines","ingredients","Reach","About","Boolean","window","location","hostname","match","routing","path","component","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.ed733958.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.79136081.png\";","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport logo from \"../assets/logo.png\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\" bg-biege-100  border-red-800 border-b-8\">\r\n      <div className=\" mx-auto container flex  flex items-center justify-between\">\r\n        <div className=\"lg:w-1/4\">\r\n          <img src={logo} alt=\"\" width=\"180\" />\r\n        </div>\r\n        <div className=\"lg:w-2/4 \">\r\n          <nav className=\" flex  w-full items-center text-red-900 font-bold\">\r\n            <NavLink exact activeClassName=\"active\" to=\"/\" className=\"mx-2\">\r\n              Home\r\n            </NavLink>\r\n            <NavLink activeClassName=\"active\" to=\"/receipes\" className=\"mx-2\">\r\n              Receipes\r\n            </NavLink>\r\n            <NavLink activeClassName=\"active\" to=\"/about\" className=\"mx-2\">\r\n              About Us\r\n            </NavLink>\r\n            <NavLink activeClassName=\"active\" to=\"/reach\" className=\"mx-2\">\r\n              Reach Us\r\n            </NavLink>\r\n          </nav>\r\n        </div>\r\n        <div className=\"lg:w-1/4 text-right\">\r\n          <h2 className=\"text-lg font-bold\">Call : 044-9898-7575</h2>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"text-center w-full bg-red-800 text-white p-2 text-xs tracking-widest fixed bottom-0\">\r\n      &copy; Copyright 2020. All Rights Reserved.\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nlet imgUrl =\r\n  \"https://previews.123rf.com/images/jagcz/jagcz1305/jagcz130500047/19434025-fresh-italian-pizza.jpg\";\r\nconst bgStyle = {\r\n  color: \"white\",\r\n  backgroundImage: \"url(\" + imgUrl + \")\",\r\n  backgroundSize: \"cover\",\r\n};\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"flex h-screen items-center \" style={bgStyle}>\r\n      <div className=\"mx-auto container flex  flex-col items-center  py-4\">\r\n        <h1 className=\"text-6xl font-bold\">Welcome Guardados!</h1>\r\n        <div className=\"mx-auto container flex\">\r\n          <p>\r\n            I'm a paragraph. Click here to add your own text and edit me. It’s\r\n            easy. Just click “Edit Text” or double click me to add your own\r\n            content and make changes to the font. Feel free to drag and drop me\r\n            anywhere you like on your page. I’m a great place for you to tell a\r\n            story and let your users know a little more about you.\r\n          </p>\r\n        </div>\r\n\r\n        <Link to=\"/receipes\">\r\n          <button className=\"my-4 p-4 bg-teal-500 text-white text-3xl hover:bg-red-500\">\r\n            Our Receipes{\" \"}\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"fixed top-0 left-0  w-full h-full z-20\">\r\n      <div className=\"center z-30\">\r\n        <div className=\"loader-cag\"></div>\r\n      </div>\r\n\r\n      <div className=\"bg-white opacity-50 top-0 left-0 w-full h-full fixed z-20\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Loader from \"../Shared/Loader\";\r\n\r\nconst Receipes = () => {\r\n  const APP_ID = \"87f7523d\";\r\n  const APP_KEY = \"62d9e30c397544b2dbfa52ae73a2315f\";\r\n  /* Loader */\r\n  const [loading, setLoading] = useState(false);\r\n  const [receipes, setReceipes] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [query, setQuery] = useState(\"beef\");\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    axios\r\n      .get(\r\n        `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`,\r\n        {\r\n          withCredentials: true,\r\n        }\r\n      )\r\n      .then((response) => {\r\n        setReceipes(response.data.hits);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n      });\r\n  }, [query]);\r\n\r\n  useEffect(() => {\r\n    document.body.style.backgroundColor = \"#fcfcfc\";\r\n  });\r\n\r\n  const SearchItem = (e) => {\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  const getSearch = (e) => {\r\n    e.preventDefault();\r\n    setQuery(search);\r\n  };\r\n  return (\r\n    <>\r\n      {/* Loader enables on submit */}\r\n      {loading === true && <Loader />}\r\n      <div className=\"flex items-center bg-gray-300\">\r\n        <div className=\"mx-auto container\">\r\n          <div className=\" flex px-2  items-center justify-between py-4\">\r\n            <h1 className=\"text-2xl text-red-800 font-bold w-4/6 leading-none\">\r\n              Receipes\r\n            </h1>\r\n            <div className=\"w-2/6 flex justify-end flex-col\">\r\n              <form onSubmit={getSearch} className=\"flex justify-end\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"p-2 rounded-tl rounded-bl \"\r\n                  value={search}\r\n                  onChange={SearchItem}\r\n                />\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"p-2 text-white rounded-tr rounded-br bg-red-800 \"\r\n                >\r\n                  Search\r\n                </button>\r\n              </form>\r\n              <p className=\"text-xs flex j  \">\r\n                Search Keywords ( Checken, Coffee, ...)\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"mx-auto container flex  flex-col mb-10\">\r\n        <div className=\"mt-4 flex flex-wrap\">\r\n          {receipes &&\r\n            receipes.map((receipe, index) => (\r\n              <div className=\"w-1/4 mb-4 px-2 flex break-words\" key={index}>\r\n                <div className=\"bg-white border border-gray-300 rounded-lg flex flex-col\">\r\n                  <div className=\"relative\">\r\n                    <img\r\n                      src={receipe.recipe.image}\r\n                      alt={receipe.recipe.label}\r\n                      className=\"rounded-t-lg w-full\"\r\n                    />\r\n                    <span className=\"leading-none absolute left-0 bottom-0 font-bold px-2  text-white mb-4 ml-1 text-2xl\">\r\n                      {receipe.recipe.label}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"p-4 flex flex-col\">\r\n                    <p className=\"text-xs font-bold underline mb-1\">\r\n                      Ingredient Lines\r\n                    </p>\r\n                    <ul className=\"flex flex-col text-xs text-gray-800\">\r\n                      {receipe.recipe.ingredientLines.map(\r\n                        (ingredients, index) => (\r\n                          <li className=\"break-words\">{ingredients}</li>\r\n                        )\r\n                      )}\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Receipes;\r\n","import React from \"react\";\r\nconst Reach = () => {\r\n  return <h1 className=\"text-lg\">Reach Us</h1>;\r\n};\r\n\r\nexport default Reach;\r\n","import React from \"react\";\r\nconst About = () => {\r\n  return <div className=\"mx-auto container\">asds</div>;\r\n};\r\n\r\nexport default About;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\n\nimport Header from \"./Shared/Header\";\nimport Footer from \"./Shared/Footer\";\nimport Home from \"./Pages/Home\";\nimport Receipes from \"./Pages/Receipes\";\nimport Reach from \"./Pages/Reach\";\nimport About from \"./Pages/About\";\nimport \"./index.css\";\nimport \"./css/main.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst routing = (\n  <Router>\n    <div>\n      <Header />\n      <hr />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/receipes\" component={Receipes} />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/reach\" component={Reach} />\n      </Switch>\n      <Footer />\n    </div>\n  </Router>\n);\n\nReactDOM.render(routing, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}